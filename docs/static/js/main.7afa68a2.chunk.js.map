{"version":3,"sources":["components/AddCategory.jsx","apis/Giphy_Api.jsx","helpers/getGifts.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifts.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","data","Giphy_Api","search","encodeURI","getGif","category","a","api","giphy_api","fetch","response","json","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,cADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPrBG,EACY,+BADZA,EAEC,mCAMQC,EAHG,SAACC,GAAD,wBACLF,EADK,cACoBG,UAAUD,GAD9B,oBACiDF,ICJtDI,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EAAMC,EAAUH,GADF,SAEGI,MAAMF,GAFT,cAEdG,EAFc,gBAGGA,EAASC,OAHZ,uBAGZX,EAHY,EAGZA,KACFY,EAAOZ,EAAKa,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QARjB,kBAWbL,GAXa,4CAAH,sDCSJQ,EATY,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,sBAAKI,UAAU,sDAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFGQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAZ,SAACA,GAAc,IAAD,EACflB,mBAAS,CACjCa,KAAM,GACNyB,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRxB,EAAOC,GAAUwB,MAAK,SAACC,GACrBH,EAAS,CACP3B,KAAM8B,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDd2BK,CAAc1B,GAAlCa,EADyB,EAC/BlB,KAAcyB,EADiB,EACjBA,QAEtB,OACE,qCACE,6BAAKpB,IAEJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SACGH,EAAOL,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOjBiB,EAjBM,WAAO,IAAD,EACW7C,mBAAS,CAAC,cADrB,mBAClB8C,EADkB,KACN/C,EADM,KAGzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG+C,EAAWpB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,YCP5C6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7afa68a2.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"Hola Mundo\")\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories((c) => [inputValue, ...c])\r\n      setInputValue(\"\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","const data = {\r\n  searchEndPoint: \"api.giphy.com/v1/gifs/search\",\r\n  key: \"LaNul6JELC9WhfurOQDBaCRNLMU4Hy2M\",\r\n}\r\n\r\nconst Giphy_Api = (search) =>\r\n  `https://${data.searchEndPoint}?q=${encodeURI(search)}&api_key=${data.key}`\r\n\r\nexport default Giphy_Api\r\n","import giphy_api from \"../apis/Giphy_Api\"\r\n\r\nexport const getGif = async (category) => {\r\n  const api = giphy_api(category)\r\n  const response = await fetch(api)\r\n  const { data } = await response.json()\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    }\r\n  })\r\n  return gifs\r\n}\r\n","import React from \"react\"\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from \"react\"\r\nimport { useFetchGifts } from \"../hooks/useFetchGifts\"\r\nimport GifGridItem from \"./GifGridItem\"\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifts(category)\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p>Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nimport { getGif } from \"../helpers/getGifts\"\r\n\r\nexport const useFetchGifts = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGif(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    })\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n","import React, { useState } from \"react\"\r\nimport AddCategory from \"./components/AddCategory\"\r\nimport { GifGrid } from \"./components/GifGrid\"\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"])\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr></hr>\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\n\nimport GifExpertApp from \"./GifExpertApp\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}